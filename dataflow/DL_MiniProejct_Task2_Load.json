{
	"name": "DL_MiniProejct_Task2_Load",
	"properties": {
		"folder": {
			"name": "DL_MiniProject_Task2"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureBlobToSqlLoading",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTableSQlLoaded",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          departmentCode as string,",
				"          departmentName as string,",
				"          discontinuedProductFlag1 as boolean,",
				"          categoryCode as string,",
				"          categoryName as string,",
				"          discontinuedProductFlag2 as boolean,",
				"          categoryCode1 as string,",
				"          categoryName1 as string,",
				"          searchCategoryCode as string,",
				"          seriesCode as long,",
				"          seriesName as string,",
				"          minStandardUnitPrice as double,",
				"          maxStandardUnitPrice as double,",
				"          minPricePerPiece as double,",
				"          maxPricePerPiece as double,",
				"          brandCode as string,",
				"          brandUrlCode as string,",
				"          brandName as string,",
				"          seriesStatus as boolean,",
				"          catchCopy as string,",
				"          minStandardDaysToShip as string,",
				"          maxStandardDaysToShip as string,",
				"          directCartType as string,",
				"          priceCheckLessFlag as string,",
				"          recommendFlag as string,",
				"          volumeDiscountFlag as string,",
				"          cValueFlag as boolean,",
				"          stockItemFlag as short,",
				"          displayStandardPriceFlag as boolean,",
				"          discontinuedProductFlag as boolean,",
				"          cadTypeList as string,",
				"          comparisonSpecValueList as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}