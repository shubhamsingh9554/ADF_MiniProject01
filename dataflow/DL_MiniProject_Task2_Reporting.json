{
	"name": "DL_MiniProject_Task2_Reporting",
	"properties": {
		"folder": {
			"name": "DL_MiniProject_Task2"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureBlobToSqlLoading",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ElectricalControls",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "MachiningTools",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "Fasteners",
						"type": "DatasetReference"
					},
					"name": "sink3"
				},
				{
					"dataset": {
						"referenceName": "LabClean",
						"type": "DatasetReference"
					},
					"name": "sink4"
				},
				{
					"dataset": {
						"referenceName": "MaterialHandling",
						"type": "DatasetReference"
					},
					"name": "sink5"
				},
				{
					"dataset": {
						"referenceName": "Materials",
						"type": "DatasetReference"
					},
					"name": "sink6"
				},
				{
					"dataset": {
						"referenceName": "PlasticMold",
						"type": "DatasetReference"
					},
					"name": "sink7"
				},
				{
					"dataset": {
						"referenceName": "PressDie",
						"type": "DatasetReference"
					},
					"name": "sink8"
				},
				{
					"dataset": {
						"referenceName": "Processingtools",
						"type": "DatasetReference"
					},
					"name": "sink9"
				},
				{
					"dataset": {
						"referenceName": "SafetyGeneral",
						"type": "DatasetReference"
					},
					"name": "sink10"
				},
				{
					"dataset": {
						"referenceName": "WiringComponents",
						"type": "DatasetReference"
					},
					"name": "sink11"
				},
				{
					"dataset": {
						"referenceName": "AutomationComponents",
						"type": "DatasetReference"
					},
					"name": "sink12"
				}
			],
			"transformations": [
				{
					"name": "split1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "filter2"
				},
				{
					"name": "filter3"
				},
				{
					"name": "filter4"
				},
				{
					"name": "filter5"
				},
				{
					"name": "filter6"
				},
				{
					"name": "filter7"
				},
				{
					"name": "filter8"
				},
				{
					"name": "filter9"
				},
				{
					"name": "filter10"
				},
				{
					"name": "filter11"
				},
				{
					"name": "filter12"
				}
			],
			"scriptLines": [
				"source(output(",
				"          departmentCode as string,",
				"          departmentName as string,",
				"          discontinuedProductFlag1 as boolean,",
				"          categoryCode as string,",
				"          categoryName as string,",
				"          discontinuedProductFlag2 as boolean,",
				"          categoryCode1 as string,",
				"          categoryName1 as string,",
				"          searchCategoryCode as string,",
				"          seriesCode as long,",
				"          seriesName as string,",
				"          minStandardUnitPrice as double,",
				"          maxStandardUnitPrice as double,",
				"          minPricePerPiece as double,",
				"          maxPricePerPiece as double,",
				"          brandCode as string,",
				"          brandUrlCode as string,",
				"          brandName as string,",
				"          seriesStatus as boolean,",
				"          catchCopy as string,",
				"          minStandardDaysToShip as string,",
				"          maxStandardDaysToShip as string,",
				"          directCartType as string,",
				"          priceCheckLessFlag as string,",
				"          recommendFlag as string,",
				"          volumeDiscountFlag as string,",
				"          cValueFlag as boolean,",
				"          stockItemFlag as short,",
				"          displayStandardPriceFlag as boolean,",
				"          discontinuedProductFlag as boolean,",
				"          cadTypeList as string,",
				"          comparisonSpecValueList as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 split(departmentName == 'Automation Components',",
				"     departmentName == 'Electrical & Controls',",
				"     departmentName == 'Machining tools',",
				"     departmentName == 'Fasteners',",
				"     departmentName == 'Lab & Clean Room Supplies',",
				"     departmentName == 'Material Handling & Storage',",
				"     departmentName == 'Materials',",
				"     departmentName == 'Plastic Mold Components',",
				"     departmentName == 'Press Die Components',",
				"     departmentName == 'Processing Tools',",
				"     departmentName == 'Safety & General Supplies',",
				"     departmentName == 'Wiring Components',",
				"     disjoint: false) ~> split1@(AutomationComponents, ElectricalControls, Machiningtools, Fasteners, LabCleanRoomSupplies, MaterialHandling, Materials, PlasticsMold, PressDie, ProcessingTools, SafetyGeneral, WiringComponents)",
				"split1@AutomationComponents filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter1",
				"split1@ElectricalControls filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter2",
				"split1@Machiningtools filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter3",
				"split1@Fasteners filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter4",
				"split1@LabCleanRoomSupplies filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter5",
				"split1@MaterialHandling filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter6",
				"split1@Materials filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter7",
				"split1@PlasticsMold filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter8",
				"split1@PressDie filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter9",
				"split1@ProcessingTools filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter10",
				"split1@SafetyGeneral filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter11",
				"split1@WiringComponents filter(!isNull(minStandardUnitPrice) || !isNull(maxStandardUnitPrice)) ~> filter12",
				"filter2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"filter3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
				"filter4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink3",
				"filter5 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink4",
				"filter6 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink5",
				"filter7 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink6",
				"filter8 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink7",
				"filter9 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink8",
				"filter10 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink9",
				"filter11 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink10",
				"filter12 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink11",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink12"
			]
		}
	}
}